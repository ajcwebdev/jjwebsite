---
interface Props {
  url?: string
  img?: string
  title?: string
  footer: string
  children?: string | HTMLElement | HTMLElement[]
}
const { url = '#', img, title = 'Default title', footer = 'Your name' } = Astro.props
---
<div class="card">
  {img && (
    <div class="card__image">
      <img src={img} alt={title} />
    </div>
  )}
  <div class="card__content">
    <h3>
      <a href={url}>{title}</a>
    </h3>
    <p>
      <slot>Default description.</slot>
    </p>
    <small>
      {footer}
    </small>
  </div>
</div>

<style is:global>
  .card {
    display: flex;
    flex-direction: column;
    border: 2px solid var(--action-color);
    border-radius: 0.5rem;
    max-width: 60ch;
    min-height: 100%;
    position: relative;
    overflow: hidden;
    transition: box-shadow 0.15s ease-in-out;
    background-color: var(--neutral-background);
  }
  .card:hover,
  .card:focus-within {
    box-shadow: 0 0 0 0.25rem var(--action-color);
  }
  .card:focus-within a:focus {
    text-decoration: none;
    box-shadow: none;
    outline: none;
  }
  .card__image {
    height: 10rem;
  }
  .card__image img {
    height: 100%;
    width: 100%;
    object-fit: cover;
  }
  .card__content {
    display: flex;
    flex-direction: column;
    flex-grow: 1;
    padding: 1rem;
  }
  .card__content a {
    text-decoration: none;
    color: var(--action-color);
  }
  .card__content a:focus {
    text-decoration: underline;
  }
  .card__content a::after {
    content: '';
    position: absolute;
    inset: 0;
  }
  .card__content:last-child {
    margin-top: auto;
    padding-top: 2rem;
  }

  /* Add dark mode support */
  .darkmode .card {
    border-color: var(--action-color);
  }
  
  .darkmode .card:hover,
  .darkmode .card:focus-within {
    box-shadow: 0 0 0 0.25rem var(--action-color);
  }
</style>