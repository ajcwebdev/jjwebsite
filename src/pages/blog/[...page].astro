---
import DefaultLayout from '../../layouts/DefaultLayout.astro';
import { Card, Pagination } from 'accessible-astro-components';
import { getCollection } from 'astro:content';

export async function getStaticPaths({ paginate }) {
  // Fetch blog posts from the 'blog' collection
  const blogPosts = await getCollection('blog');

  // Paginate blog posts with 6 posts per page
  return paginate(blogPosts, { pageSize: 6 });
}

const { page } = Astro.props;

// Helper function to format dates
function formatDate(dateStr) {
  const date = new Date(dateStr);
  if (isNaN(date)) return 'Date not available';
  return date.toLocaleDateString('en-US', {
    year: 'numeric',
    month: 'long',
    day: 'numeric',
  });
}
---

<DefaultLayout
  title="Blog"
  description="Browse through the latest blog posts from Teach Jenn Tech."
>
  <section class="my-12">
    <div class="container">
      <h1>Blog</h1>
      <p class="text-2xl">Explore the latest articles on various topics from Teach Jenn Tech.</p>
    </div>
  </section>

  <section class="my-12">
    <div class="container">
      <p class="text-sm"><em>Post {page.start + 1} through {page.end + 1} of {page.total} total posts</em></p>
      <ul class="my-3">
        {page.data.map((post) => (
          <li key={post.slug}>
            <Card
              url={`/blog/${post.slug}`}
              title={post.data.title}
              footer={`By ${post.data.author} on ${formatDate(post.data.pubDate)}`}
            >
              <img src={post.data.imgUrl} alt={post.data.title} class="post-card-image" />
              <p class="post-card-description">{post.data.description}</p>
            </Card>
          </li>
        ))}
      </ul>
      <div class="mt-12 grid place-content-center">
        <Pagination
          firstPage={page.url.prev ? '/blog' : null}
          previousPage={page.url.prev ? page.url.prev : null}
          nextPage={page.url.next ? page.url.next : null}
          lastPage={page.url.next ? `/blog/${Math.ceil(page.total / page.size)}` : null}
          currentPage={page.currentPage}
          totalPages={Math.ceil(page.total / page.size)}
        />
      </div>
    </div>
  </section>
</DefaultLayout>

<style lang="scss">
  ul {
    display: grid;
    grid-template-columns: 1fr;
    grid-gap: 4rem;

    @media (min-width: 550px) {
      grid-template-columns: repeat(2, 1fr);
      grid-gap: 2rem;
    }

    @media (min-width: 950px) {
      grid-template-columns: repeat(3, 1fr);
    }
  }

 

  .post-card-description {
    margin-top: 0.5rem;
    font-size: 0.875rem;
    color: #666;
  }
</style>