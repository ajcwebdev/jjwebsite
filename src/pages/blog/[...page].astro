---
import DefaultLayout from '../../layouts/DefaultLayout.astro';
import { Card, Pagination } from 'accessible-astro-components';
import { createClient } from '@libsql/client';

export async function getStaticPaths({ paginate }) {
  // Initialize Turso client inside the function
  const turso = createClient({
    url: import.meta.env.TURSO_DATABASE_URL,
    authToken: import.meta.env.TURSO_AUTH_TOKEN,
  });

  // Execute SQL query to fetch blog posts from the "blog" table
  const { rows } = await turso.execute('SELECT id, title, description, date, blog, image_url FROM blog');

  // Paginate the results
  return paginate(rows, { pageSize: 6 });
}

const { page } = Astro.props;
---

<DefaultLayout
  title="Blog"
  description="An example of a blog with dynamic content fetched from Turso using the title, description, and date."
>
  <section class="my-12">
    <div class="space-content container">
      <h1>Blog</h1>
      <p class="text-2xl">
        An example of a blog with dynamic content fetched from Turso. The Accessible Astro Card Component is used here to display all the posts.
      </p>
    </div>
  </section>
  <section class="my-12">
    <div class="container">
      <p class="text-sm">
        <em>Post {page.start + 1} through {page.end} of {page.total} total posts</em>
      </p>
      <ul class="my-3">
        {page.data.map((post) => (
          <li key={post.id}>
<Card
  url={'/blog/' + post.title.replaceAll(' ', '-').toLowerCase()}
  title={post.title}
  footer={'Date: ' + post.date}
>
  {post.image_url ? (
    <img src={post.image_url} alt={`Image for ${post.title}`} class="card-image" />
  ) : (
    <p class="no-image-placeholder">No image available</p> <!-- Optional: for styling -->
  )}
  <p>{post.description}</p>
</Card>
          </li>
        ))}
      </ul>
      <div class="mt-12 grid place-content-center">
        <Pagination
          firstPage={page.url.prev ? '/blog' : null}
          previousPage={page.url.prev ? page.url.prev : null}
          nextPage={page.url.next ? page.url.next : null}
          lastPage={page.url.next ? `/blog/${Math.ceil(page.total / page.size)}` : null}
          currentPage={page.currentPage}
          totalPages={Math.ceil(page.total / page.size)}
        />
      </div>
    </div>
  </section>
</DefaultLayout>

<style lang="scss">
  .card-image {
    width: 100%;
    height: auto;
    margin-bottom: 1rem;
  }

  ul {
    display: grid;
    grid-template-columns: 1fr;
    grid-gap: 4rem;

    @media (min-width: 550px) {
      grid-template-columns: repeat(2, 1fr);
      grid-gap: 2rem;
    }

    @media (min-width: 950px) {
      grid-template-columns: repeat(3, 1fr);
    }
  }
</style>